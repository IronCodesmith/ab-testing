    Assert.AreEqual failed. Expected:<pageViews | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T00:00:00.0000000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp)| extend Hour = datepart("Hour", timestamp)| extend Type = "hourlypageviews"| summarize Value = count() by Hostname,Type, Year,Month, Day, bin(Hour,1)| union(pageViews | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp) | extend Type = "dailypageviews"| summarize Value = count() by Hostname,Type, Year, Month, bin(Day,1))| union(pageViews | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<=datetime(2020-03-31T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Type = "monthlypageviews"| summarize Value = count() by Hostname, Type, Year, bin(Month, 1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T00:00:00.0000000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp)| extend Hour = datepart("Hour", timestamp)| extend Type = "hourlyuniqueusers"| summarize Value = dcount(user_Id) by Hostname,Type, Year,Month, Day, bin(Hour,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp) | extend Type = "dailyuniqueusers"| summarize Value = dcount(user_Id) by Hostname,Type, Year, Month, bin(Day,1))| union(requests | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<=datetime(2020-03-31T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Type = "monthlyuniqueusers"| summarize Value = dcount(user_Id) by Hostname,Type, Year, bin(Month,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T00:00:00.0000000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp)| extend Hour = datepart("Hour", timestamp)| extend Type = "hourlyrequests"| summarize Value = count() by Hostname,Type, Year,Month, Day, bin(Hour,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp) | extend Type = "dailyrequests"| summarize Value = count() by Hostname,Type, Year, Month, bin(Day,1))| union(requests | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<=datetime(2020-03-31T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Type = "monthlyrequests"| summarize Value = count() by Hostname,Type, Year, bin(Month,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T00:00:00.0000000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp)| extend Hour = datepart("Hour", timestamp)| extend Type = "hourlysessions"| summarize Value = dcount(session_Id) by Hostname,Type, Year,Month, Day, bin(Hour,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp) | extend Type = "dailysessions"| summarize Value = dcount(session_Id) by Hostname,Type, Year, Month, bin(Day,1))| union(requests | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<=datetime(2020-03-31T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("year", timestamp)| extend Month = datepart("Month", timestamp)| extend Type = "monthlysessions"| summarize Value = dcount(session_Id) by Hostname,Type, Year, bin(Month,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<= datetime(2020-03-20T00:00:00.0000000Z) and session_Id != ""| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("Year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp)| extend Hour = datepart("Hour", timestamp)| summarize MaxRequestTime = max(timestamp), MinRequestTime = min(timestamp) by Hostname, Year, Month, Day, session_Id, bin(Hour,1)| extend SessionDurationSeconds = datetime_diff("second", MaxRequestTime, MinRequestTime)| extend Type = "hourlyaveragesessionduration"| summarize Value = tolong(avg(SessionDurationSeconds))  by Hostname, Type, Year, Month, Day, bin(Hour, 1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<= datetime(2020-03-20T23:59:59.9990000Z) and session_Id != ""| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("Year", timestamp)| extend Month = datepart("Month", timestamp)| extend Day = datepart("Day", timestamp)| summarize MaxRequestTime = max(timestamp), MinRequestTime = min(timestamp) by Hostname, Year, Month, session_Id, bin(Day,1)| extend SessionDurationSeconds = datetime_diff("second", MaxRequestTime, MinRequestTime)| extend Type = "dailyaveragesessionduration"| summarize Value = tolong(avg(SessionDurationSeconds))  by Hostname, Type, Year, Month, bin(Day, 1))| union(requests | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<= datetime(2020-03-31T23:59:59.9990000Z) and session_Id != ""| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart("Year", timestamp)| extend Month = datepart("Month", timestamp)| summarize MaxRequestTime = max(timestamp), MinRequestTime = min(timestamp) by Hostname, Year, session_Id, bin(Month,1)| extend SessionDurationSeconds = datetime_diff("second", MaxRequestTime, MinRequestTime)| extend Type = "monthlyaveragesessionduration"| summarize Value = tolong(avg(SessionDurationSeconds))  by Hostname, Type, Year, bin(Month, 1))>.
	                        Actual:<"pageViews | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T00:00:00.0000000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp)| extend Hour = datepart(\"Hour\", timestamp)| extend Type = \"hourlypageviews\"| summarize Value = count() by Hostname,Type, Year,Month, Day, bin(Hour,1)| union(pageViews | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp) | extend Type = \"dailypageviews\"| summarize Value = count() by Hostname,Type, Year, Month, bin(Day,1))| union(pageViews | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<=datetime(2020-03-31T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Type = \"monthlypageviews\"| summarize Value = count() by Hostname, Type, Year, bin(Month, 1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T00:00:00.0000000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp)| extend Hour = datepart(\"Hour\", timestamp)| extend Type = \"hourlyuniqueusers\"| summarize Value = dcount(user_Id) by Hostname,Type, Year,Month, Day, bin(Hour,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp) | extend Type = \"dailyuniqueusers\"| summarize Value = dcount(user_Id) by Hostname,Type, Year, Month, bin(Day,1))| union(requests | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<=datetime(2020-03-31T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Type = \"monthlyuniqueusers\"| summarize Value = dcount(user_Id) by Hostname,Type, Year, bin(Month,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T00:00:00.0000000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp)| extend Hour = datepart(\"Hour\", timestamp)| extend Type = \"hourlyrequests\"| summarize Value = count() by Hostname,Type, Year,Month, Day, bin(Hour,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp) | extend Type = \"dailyrequests\"| summarize Value = count() by Hostname,Type, Year, Month, bin(Day,1))| union(requests | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<=datetime(2020-03-31T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Type = \"monthlyrequests\"| summarize Value = count() by Hostname,Type, Year, bin(Month,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T00:00:00.0000000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp)| extend Hour = datepart(\"Hour\", timestamp)| extend Type = \"hourlysessions\"| summarize Value = dcount(session_Id) by Hostname,Type, Year,Month, Day, bin(Hour,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<=datetime(2020-03-20T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp) | extend Type = \"dailysessions\"| summarize Value = dcount(session_Id) by Hostname,Type, Year, Month, bin(Day,1))| union(requests | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<=datetime(2020-03-31T23:59:59.9990000Z)| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Type = \"monthlysessions\"| summarize Value = dcount(session_Id) by Hostname,Type, Year, bin(Month,1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<= datetime(2020-03-20T00:00:00.0000000Z) and session_Id != \"\"| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"Year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp)| extend Hour = datepart(\"Hour\", timestamp)| summarize MaxRequestTime = max(timestamp), MinRequestTime = min(timestamp) by Hostname, Year, Month, Day, session_Id, bin(Hour,1)| extend SessionDurationSeconds = datetime_diff(\"second\", MaxRequestTime, MinRequestTime)| extend Type = \"hourlyaveragesessionduration\"| summarize Value = tolong(avg(SessionDurationSeconds))  by Hostname, Type, Year, Month, Day, bin(Hour, 1))| union(requests | where timestamp >= datetime(2020-03-15T00:00:00.0000000Z) and timestamp<= datetime(2020-03-20T23:59:59.9990000Z) and session_Id != \"\"| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"Year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| extend Day = datepart(\"Day\", timestamp)| summarize MaxRequestTime = max(timestamp), MinRequestTime = min(timestamp) by Hostname, Year, Month, session_Id, bin(Day,1)| extend SessionDurationSeconds = datetime_diff(\"second\", MaxRequestTime, MinRequestTime)| extend Type = \"dailyaveragesessionduration\"| summarize Value = tolong(avg(SessionDurationSeconds))  by Hostname, Type, Year, Month, bin(Day, 1))| union(requests | where timestamp >= datetime(2020-03-01T00:00:00.0000000Z) and timestamp<= datetime(2020-03-31T23:59:59.9990000Z) and session_Id != \"\"| extend Hostname = tostring(parse_url(url).Host)| extend Year = datepart(\"Year\", timestamp)| extend Month = datepart(\"Month\", timestamp)| summarize MaxRequestTime = max(timestamp), MinRequestTime = min(timestamp) by Hostname, Year, session_Id, bin(Month,1)| extend SessionDurationSeconds = datetime_diff(\"second\", MaxRequestTime, MinRequestTime)| extend Type = \"monthlyaveragesessionduration\"| summarize Value = tolong(avg(SessionDurationSeconds))  by Hostname, Type, Year, bin(Month, 1))">. 
