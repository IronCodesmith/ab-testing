--beginvalidatingquery
	if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sp_DatabaseVersion]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    begin
		 select 1, 'Upgrading database'
    end
    else
		select -1, 'Not an EPiServer database'
--endvalidatingquery

-- Create MultivariateTest Tables to Store MultivariateTest Information.
DECLARE @CurrentMigration [nvarchar](max)

IF object_id('[dbo].[__MigrationHistory]') IS NOT NULL
    SELECT @CurrentMigration =
        (SELECT TOP (1) 
        [Project1].[MigrationId] AS [MigrationId]
        FROM ( SELECT 
        [Extent1].[MigrationId] AS [MigrationId]
        FROM [dbo].[__MigrationHistory] AS [Extent1]
        WHERE [Extent1].[ContextKey] = N'Testing.Migrations.Configuration'
        )  AS [Project1]
        ORDER BY [Project1].[MigrationId] DESC)

IF @CurrentMigration IS NULL
    SET @CurrentMigration = '0'

IF @CurrentMigration < '201606291147071_Initial'
BEGIN
    CREATE TABLE [dbo].[tblABTest] (
        [Id] [uniqueidentifier] NOT NULL,
        [Title] [nvarchar](max) NOT NULL,
        [Description] [nvarchar](max),
        [Owner] [nvarchar](max) NOT NULL,
        [OriginalItemId] [uniqueidentifier] NOT NULL,
        [State] [int] NOT NULL,
        [StartDate] [datetime] NOT NULL,
        [EndDate] [datetime] NOT NULL,
        [ParticipationPercentage] [int] NOT NULL,
        [LastModifiedBy] [nvarchar](100),
        [ExpectedVisitorCount] [int],
        [ActualVisitorCount] [int] NOT NULL,
        [ConfidenceLevel] [float] NOT NULL,
        [ZScore] [float] NOT NULL,
        [IsSignificant] [bit] NOT NULL,
        [CreatedDate] [datetime] NOT NULL,
        [ModifiedDate] [datetime] NOT NULL,
        CONSTRAINT [PK_dbo.tblABTest] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[tblABKeyPerformanceIndicator] (
        [Id] [uniqueidentifier] NOT NULL,
        [TestId] [uniqueidentifier] NOT NULL,
        [KeyPerformanceIndicatorId] [uniqueidentifier],
        [CreatedDate] [datetime] NOT NULL,
        [ModifiedDate] [datetime] NOT NULL,
        CONSTRAINT [PK_dbo.tblABKeyPerformanceIndicator] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_TestId] ON [dbo].[tblABKeyPerformanceIndicator]([TestId])
    CREATE TABLE [dbo].[tblABVariant] (
        [Id] [uniqueidentifier] NOT NULL,
        [TestId] [uniqueidentifier] NOT NULL,
        [ItemId] [uniqueidentifier] NOT NULL,
        [ItemVersion] [int] NOT NULL,
        [IsWinner] [bit] NOT NULL,
        [Conversions] [int] NOT NULL,
        [Views] [int] NOT NULL,
        [CreatedDate] [datetime] NOT NULL,
        [ModifiedDate] [datetime] NOT NULL,
        CONSTRAINT [PK_dbo.tblABVariant] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_TestId] ON [dbo].[tblABVariant]([TestId])
    ALTER TABLE [dbo].[tblABKeyPerformanceIndicator] ADD CONSTRAINT [FK_dbo.tblABKeyPerformanceIndicator_dbo.tblABTest_TestId] FOREIGN KEY ([TestId]) REFERENCES [dbo].[tblABTest] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[tblABVariant] ADD CONSTRAINT [FK_dbo.tblABVariant_dbo.tblABTest_TestId] FOREIGN KEY ([TestId]) REFERENCES [dbo].[tblABTest] ([Id]) ON DELETE CASCADE
	IF object_id('[dbo].[__MigrationHistory]') IS NULL
	BEGIN
		CREATE TABLE [dbo].[__MigrationHistory] (
			[MigrationId] [nvarchar](150) NOT NULL,
			[ContextKey] [nvarchar](300) NOT NULL,
			[Model] [varbinary](max) NOT NULL,
			[ProductVersion] [nvarchar](32) NOT NULL,
			CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId], [ContextKey])
		)
	END
       INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
    VALUES (N'201606291147071_Initial', N'Testing.Migrations.Configuration',  0x1F8B0800000000000400ED5C5B6FE3B8157E2FD0FF20E8A92DB25632F3B20DEC5D647259189D4C8271262DFA32A0A56387588AF29254D646D15FD687FEA4FE851ED9BA9094284BB23748DA411E62F3F291E7F0F05C784EF29F7FFD7BFCE33A66DE330849133EF1CF46A7BE073C4C22CA97133F558BEFBEF77FFCE1F7BF1B5F47F1DA7B2CC6BDCFC6E14C2E27FE9352ABF32090E113C4448E621A8A44260B350A9338205112BC3B3DFD737076160042F888E579E3CF29573486ED17FC7A99F010562A25EC368980C9BC1D7B665B54EF138941AE480813FFFA9ECE40E08E47B744FC0C0A373A7A00B9FD7D4598EF5D304A705B33600BDF239C278A28DCF4F91709332512BE9CADB081B087CD0A70DC8230093931E7D5F0AE749DBECBE80AAA890554984A95C43D01CFDEE78C0AECE983D8ED978C44565E23CBD526A37ACBCE898FDCBAF890B1CEF7ECD5CE2F99C846EE65F76887BA3DB6510978E2E5434E4A9141C9CA7E4EBCCB94A954C08443AA046127DE7D3A6734FC0B6C1E929F814F78CA98BE6FDC39F6190DD8742F921508B5F90C8B9C9A69E47B81392FB02796D3B4393B327F4A297EFE846B933983522A82D6E90F5431281050B69060DFBB25EB8FC097EA69E2E347DFBBA16B888A961CF60BA778C570921229F45EF60A6428E86A2715072FDEBED6DDAF1CC4CB937827E89272C2A60AE2030F6986125D1D122A854C4C33F1CC3BFAC30975A541669F1F5097F546BAE6D15170EE714334A4ABEDC5BD071102576459E24EB97AFFAE37E84722155E6ABAA0107DD8B408C0D9E9E911C4EC7ABD825041F448255589B84CD03E5804B4035C8499F56899DE937EB4480B1AA125848FF00CAC3CA4049555FF23FAFB2C4C041C08329533BAE4782221A9A8FB90240C08EF4F9F0094B7E308602127C3C03E9167BADCC9AE098BCA1BA5799108B44B214C798484E3E14ADFFB0C6C3B413ED15575A71DE3BF6A66EE4624F1E784ED6CDFDEF15F1F885842C6EAA4C7A45992E215EC4EE62311140FD44956DEEF24A3D6DFB4EDFAA0A66D8E83CA47D8E7393818714457C2B1C2FF8B6F81441E08E160A08DFAE6158576335E4A3314B7A7976628EEE5D02B975FE2235EB11CF1DB95EA6C830FF74733889CCB87B92853F957CA35EF7CB02B90F03CFE97876DE891C2AF0742FC2F689BFE06BB419BB8AD7A37ED91C6A6EED0029EA9BC616459BD7C1C479B644B4A23B43A58AB60081181601B84D065CA3CA75B88E7208A2BC149A8E83312F548588A0DA7B57335C65F98A3CFDA475F25BC1A5B8F484C64113E2174548E7F5F3FB9DD19E98D17522621DD9EC25E4F4B932F731F18577A434C9911203BDDBB5B3C39BAC2B3C2939FF87FAA71A1E7EAA5AF6AAC5EDC1B73B133DF362B77FC0A1828F0B283CC9ED82E890C4954BFCDC8EDC86C414B040223654A182A40895248B9AA9B2DCAB3C89A0D20C9C2EA6804B3BD96ABDA3D57B002BC125C0D38DF2EDB290C647D4BE5CA165BF771711C6822BD57D2EB9AB345B65AD4A8214BA5D7D44B725BA2AAB722A94E125E46329DE7F3CA247167C4708EC21995AE278ACC8984AC1DD64D3EF717ECDC194A99BF71D9E294E1CE40151661CB04F48F2A935D17A39A489A18EE27912650A70EDFB34AF522D1845ADE270B45636F05D52DF8D2A6F609DA6CD91868F84AF2DBF85B13C481764E5BAC14085B03989CECC6E506A7B391AB7B546C7725AB1152C94B3B97DC3AF520AE144E707985ABEC61B04B1F1669C6C091671CDF92D50ABD4C2DEF98B778B35DD2F1F2BB59FF045CBCC30842D990872B775BAE8402439660F566E1590437544855A824DFBB8CE2DA305B6139AE78B19AA993EAC756DCFB627CF6397FAADF13143825ABE2EA0D121A67C622A319B4C36F99BBCD05134644C39BC065C2D298BB0D977B769EC1D301F2A6EE18463A4E47323ABAE3E529371D296FEA8161E5CF0C30ABAF3B6A1E40EA6079532F8C227F66E114CDDDB1CA0C9A8E543676C77166D0745CE7A0EEEBD849351DDEEEEBC185C6DC99C192C611DD57684AAEE9F84DFDDDD16BA9361DBAD6D91DB748BAE970455B77142BEB66A81AB3AB07C5FA2B9741ADDED11DCF7CE9D201CD9E3AE238B05472CDDFAE99825AB8625A964E76C7E9671DD910B93CE04196A933D86F64AAF290C8B0558E30C98DD29213D2815B867D13F3CE625E3AC64716EB22041B24C6CEC9AF596C9BFC98FEFE8B917AB1A1CA8E3EB6A1C8C09866A168ED6503AB1C8C65FFAA8EEE78792A4647CA9BBE5D5FABBB163EDA43CAD5CB30D20A17C779E8B6BF76B516CBED86F81EB2EA19DD1C8CE3661B89C238CA068C66BFB04B4621732E8A01B7041D0EBC3EBB34898FA1E6F756C5EBEBA93E0DA48C58D712D4174F21A79CFE9242E65BAA4CF8C461D59FFC9988F089883FC464FDC76354743A017B576D1EB6B5E64ACC8399675465D24CC20FADC38CF0B33A421DE6609C3D759843886CAEC22C0EB45E87D94F4ADA8A2EADDD76817397600E21DD5180B96009E90F66D65F0EC3682CBF9CD30194D56B1C06CB5C538D4347B06314FBBD41A56DD400D5E16A691E2416D613FF1FDBF9E7DEF46F5F771027DE9D407B7CEE9D7AFF3C7E655E1B9D5DEEE21B94B1C6B8E49B4C0D2C4D3B98A88632B5216ADC2E521BA430EB056A43B66294A70D3249AFFB521DBF78A8C824BE78C94397E4EAD12A9686D65738B35C2F58E7F3DA8A290E2FEB791D325716390CAC257A1332E57E467C850539F534B8E309B65EA6DB5670B37B8041DD3B4FF0B073076BDEB51EA74DEDF4AAC8716E63680D8F2EACAD553CCE95DF489D8F79C85615C1B0B21D1BACEB19BCA6C29D43D862098E9D38F84D2A73EA4FA8A841B47F1280FA4B62F85D4264FF32804368E88E72CC942F924285593B2A86D8EE182882EE17B910E82E9350617708526EFFD8352FE0BE8EE7104DF95DAA56A94292219E33234F9FA9C2B6F5B7E547E69EC777DB373F790C12709B34F320EFF88794B2AAF0FCA6C1837440643AF627C0F6DD59A2CA56B0DC94489FB6F5EF5D8072F695A6E101E215433079C767442BB8EFB1B72F123EC292849BE225DC0DB2FF204CB68FAF28590A12CB1CA39A8F5F5186A378FDC37F01435CDD322B430000 , N'6.1.3-40302')
END


GO
--beginvalidatingquery
	if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sp_DatabaseVersion]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    begin
		 select 1, 'Upgrading database'
    end
    else
		select -1, 'Not an EPiServer database'
--endvalidatingquery

-- Create MultivariateTest Tables to Store MultivariateTest Information.
DECLARE @CurrentMigration [nvarchar](max)

IF object_id('[dbo].[__MigrationHistory]') IS NOT NULL
    SELECT @CurrentMigration =
        (SELECT TOP (1) 
        [Project1].[MigrationId] AS [MigrationId]
        FROM ( SELECT 
        [Extent1].[MigrationId] AS [MigrationId]
        FROM [dbo].[__MigrationHistory] AS [Extent1]
        WHERE [Extent1].[ContextKey] = N'KPI.Migrations.Configuration'
        )  AS [Project1]
        ORDER BY [Project1].[MigrationId] DESC)

IF @CurrentMigration IS NULL
    SET @CurrentMigration = '0'

IF @CurrentMigration < '201604051658334_Initial'
BEGIN
    CREATE TABLE [dbo].[tblKeyPerformaceIndicator] (
        [Id] [uniqueidentifier] NOT NULL,
        [ClassName] [nvarchar](max) NOT NULL,
        [Properties] [nvarchar](max) NOT NULL,
        [CreatedDate] [datetime] NOT NULL,
        [ModifiedDate] [datetime] NOT NULL,
        CONSTRAINT [PK_dbo.tblKeyPerformaceIndicator] PRIMARY KEY ([Id])
    )
	IF object_id('[dbo].[__MigrationHistory]') IS NULL
	BEGIN
		CREATE TABLE [dbo].[__MigrationHistory] (
			[MigrationId] [nvarchar](150) NOT NULL,
			[ContextKey] [nvarchar](300) NOT NULL,
			[Model] [varbinary](max) NOT NULL,
			[ProductVersion] [nvarchar](32) NOT NULL,
			CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId], [ContextKey])
		)
	END
    INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
    VALUES (N'201604051658334_Initial', N'KPI.Migrations.Configuration',  0x1F8B0800000000000400CD57DB6EDB38107D5F60FF41E0D32E908A49FBD20DE4165939298CD48951A57DA7A59143941795A402FBDBFAB09FB4BFB043EB6AF9523B0D8A8501431ACE1C9E19CE85FAF7FB3FD1FBA514C11318CBB51A918BF09C04A0529D71B51891D2E5AFDE92F7EF7EFF2DBACEE432F8D2E8BDF17A68A9EC883C3A575C526AD34790CC8692A7465B9DBB30D592B24CD3D7E7E77FD18B0B0A0841102B08A24FA5725CC2FA055F63AD52285CC9C45467206C2DC795648D1ADC3109B660298CC8F58C276090713865E62B38241ADECE26E19809125C09CE905202222701534A3BE690F0E5670B89335A2D9202054C3CAC0A40BD9C090BB523979DFAB13E9DBFF63ED1CEB0814A4BEBB43C11F0E24D1D243A347F56A8491B440CE33586DBADBCD7EB508E0846EBB6E024186E75190BE3D50EC6395C9F5258619C05283D6B530333C8FFCE82B814AE343052503AC3C459302BE782A7B7B07AD05F418D5429449F23B2C4B50D018A66461760DCEA13E435F3494602BA69478786AD59CFA6F2EA43C9F1F90EF76673016D06D083E6B160D6FAC706057309C34182295B7E04B5708F23828F24B8E14BC81A490DFD59712C273472A68493B7AE5F39D85FBF776C8039C8C6F8D76CEE9F1FB83C1D0B3386E7FC596011EDB2773BA7B17538C6159836B11D9B330B5E0E4BB723C3B117D4496EEBC06C32AF7013703522E63806BFE350B597B0A9A05D545B525D23A355276B3A1EDDD3F2A2292B0A3CDF5E0BAC254152F5BFF855727A3F9015064DED8EB6D0B26D7772DAB0050C56716B647AC38D754D90491067724B6D78047BC2DBECD68BF2B0FABBA037CAFEB93238D49FEAB319C075B1BC41F72428B7F6145A466D5BDC325C4F222698D9D158622D4AA9F635A743D6BDBED207E9898FC7EA378A3E585F7E02B37EE96F70EB2F1C8FB759FE7DC0CD956DC4880ECE6C9823742B4906C361987087EA75A8D2EEDED6EDA03EA3BA567E7C6FD92A9E4A850418AA279EF9C24956D6810CBD42987C13B1E0E86FA730658AE7605D353F09D6F6DBC18DE7FF73FBA0D666E2A82BC82FBF02948A7F2B01038A8430F3CCCF5F07D41333E923337F48B6FCF30546FCCFE1ED18DB193EBB971ADB47829D36B6B747CBE1A1DC4CDFBD63B9AA2E643BD748BC62E9E602D3640626D74662514E54C6538605FCEC29BE5DFD11ED7FDB4463B07CD141F82F1D05A92FAB0EB4D199A85C37F1474FFB8C1A95E1F18063781CEC0AD32767A9C3E514AC5DDF0FBF3051FA3129E7904DD47DE98AD25D590B722E567D7F237A78FFF555659373745FF837FB122E204DEE33EA5EFD5D7291B5BC6F7664D41E089F3B1F00E5EB7685F763845BAC5AA43BAD8E04AAC3378602946F0F0F200B8160F65E25EC099EC30D2F9B1F61C1D255D3C4F783FCF82036C31E8D395B18266D8DD1D9FBEF75EA3FD8DFFD070930E145E20F0000 , N'6.1.3-40302')
END


GO
