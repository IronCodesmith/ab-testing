--beginvalidatingquery
	if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sp_DatabaseVersion]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
    begin
		 select 1, 'Upgrading database'
    end
    else
		select -1, 'Not an EPiServer database'
--endvalidatingquery

-- Create MultivariateTest Tables to Store MultivariateTest Information.
DECLARE @CurrentMigration [nvarchar](max)

IF object_id('[dbo].[__MigrationHistory]') IS NOT NULL
    SELECT @CurrentMigration =
        (SELECT TOP (1) 
        [Project1].[MigrationId] AS [MigrationId]
        FROM ( SELECT 
        [Extent1].[MigrationId] AS [MigrationId]
        FROM [dbo].[__MigrationHistory] AS [Extent1]
        WHERE [Extent1].[ContextKey] = N'Testing.Migrations.Configuration'
        )  AS [Project1]
        ORDER BY [Project1].[MigrationId] DESC)

IF @CurrentMigration IS NULL
    SET @CurrentMigration = '0'

IF @CurrentMigration < '201604221951354_Initial'
BEGIN
    CREATE TABLE [dbo].[tblABTest] (
        [Id] [uniqueidentifier] NOT NULL,
        [Title] [nvarchar](255) NOT NULL,
        [Description] [nvarchar](255),
        [Owner] [nvarchar](100) NOT NULL,
        [OriginalItemId] [uniqueidentifier] NOT NULL,
        [State] [int],
        [StartDate] [datetime] NOT NULL,
        [EndDate] [datetime] NOT NULL,
        [ParticipationPercentage] [int] NOT NULL,
        [LastModifiedBy] [nvarchar](100),
        [ExpectedVisitorCount] [int],
        [ActualVisitorCount] [int] NOT NULL,
        [ConfidenceLevel] [float] NOT NULL,
        [ZScore] [float] NOT NULL,
        [IsSignificant] [bit] NOT NULL,
        [CreatedDate] [datetime] NOT NULL,
        [ModifiedDate] [datetime] NOT NULL,
        CONSTRAINT [PK_dbo.tblABTest] PRIMARY KEY ([Id])
    )
    CREATE TABLE [dbo].[tblABKeyPerformanceIndicator] (
        [Id] [uniqueidentifier] NOT NULL,
        [TestId] [uniqueidentifier] NOT NULL,
        [KeyPerformanceIndicatorId] [uniqueidentifier],
        [CreatedDate] [datetime] NOT NULL,
        [ModifiedDate] [datetime] NOT NULL,
        CONSTRAINT [PK_dbo.tblABKeyPerformanceIndicator] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_TestId] ON [dbo].[tblABKeyPerformanceIndicator]([TestId])
    CREATE TABLE [dbo].[tblABVariant] (
        [Id] [uniqueidentifier] NOT NULL,
        [TestId] [uniqueidentifier] NOT NULL,
        [ItemId] [uniqueidentifier] NOT NULL,
        [ItemVersion] [int] NOT NULL,
        [IsWinner] [bit] NOT NULL,
        [Conversions] [int] NOT NULL,
        [Views] [int] NOT NULL,
        [CreatedDate] [datetime] NOT NULL,
        [ModifiedDate] [datetime] NOT NULL,
        CONSTRAINT [PK_dbo.tblABVariant] PRIMARY KEY ([Id])
    )
    CREATE INDEX [IX_TestId] ON [dbo].[tblABVariant]([TestId])
    ALTER TABLE [dbo].[tblABKeyPerformanceIndicator] ADD CONSTRAINT [FK_dbo.tblABKeyPerformanceIndicator_dbo.tblABTest_TestId] FOREIGN KEY ([TestId]) REFERENCES [dbo].[tblABTest] ([Id]) ON DELETE CASCADE
    ALTER TABLE [dbo].[tblABVariant] ADD CONSTRAINT [FK_dbo.tblABVariant_dbo.tblABTest_TestId] FOREIGN KEY ([TestId]) REFERENCES [dbo].[tblABTest] ([Id]) ON DELETE CASCADE
	IF object_id('[dbo].[__MigrationHistory]') IS NULL
	BEGIN
		CREATE TABLE [dbo].[__MigrationHistory] (
			[MigrationId] [nvarchar](150) NOT NULL,
			[ContextKey] [nvarchar](300) NOT NULL,
			[Model] [varbinary](max) NOT NULL,
			[ProductVersion] [nvarchar](32) NOT NULL,
			CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY ([MigrationId], [ContextKey])
		)
	END
    INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
    VALUES (N'201604221951354_Initial', N'Testing.Migrations.Configuration',  0x
END


GO
