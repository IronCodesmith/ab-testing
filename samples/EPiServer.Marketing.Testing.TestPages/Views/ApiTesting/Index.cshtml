@using System.Web.Optimization
@model EPiServer.Marketing.Testing.TestPages.Models.ViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    @Styles.Render("~/bundles/css")
    @Scripts.Render("~/bundles/js")

</head>
<body class="Sleek">
    <p>

    </p>
<div class="container">
    <span class="btn">@Html.ActionLink("View Test Cache", "ViewMarketingTestCacheData")</span>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => Model.Tests[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model.Tests[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model.Tests[0].Owner)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model.Tests[0].StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model.Tests[0].EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model.Tests[0].State)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model.Tests[0].OriginalItemId)
            </th>
            <th colspan="2">
                @Html.DisplayNameFor(model => Model.Tests[0].Variants)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => Model.Tests[0].Conversions)*@
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model.Tests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Owner)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.OriginalItemId)
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.Conversions)*@
                </td>
                @if (item.Variants.Count > 0)
                {
                    foreach (var variant in item.Variants)
                    {
                        <td>
                            Item Version:
                            @Html.DisplayFor(resultItem => variant.ItemVersion)
                            <br/>
                            Views:
                            @Html.DisplayFor(resultItem => variant.Views)
                            <br/>
                            Conversions:
                            @Html.DisplayFor(resultItem => variant.Conversions)
                        </td>
                    }
                    if (item.Variants.Count == 1)
                    {
                        <td></td>
                    }
                }
                else
                {
                    <td>No Page Conversion Test Variants Found </td>
                    <td></td>
                }

                <td>
                    @Html.ActionLink("Edit", "UpdateAbTest", new {id = item.Id}) |
                    @Html.ActionLink("Details", "GetAbTestById", new {id = item.Id}) |
                    @Html.ActionLink("Delete", "DeleteAbTest", new {id = item.Id})
                </td>
            </tr>
        }

    </table>
</div>

    <div>
        <p>
            <span class="btn">@Html.ActionLink("Manualy Create ABTest", "CreateAbTest")</span>
            <span class="btn">@Html.ActionLink("Auto Create ABTests", "AutoCreateAbTest")</span>
        </p>
        <p>
            @using (Html.BeginForm("FilteredTests", "ApiTesting", FormMethod.Post))
            {
                <table class="table">
                    @for (var i = 0; i < Model.Filters.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.CheckBoxFor(f => Model.Filters[i].IsEnabled, new { @checked = Model.Filters[i].IsEnabled })@Html.Label(Model.Filters[i].Property.ToString())
                                @Html.HiddenFor(f => Model.Filters[i].Property, new { @value = Model.Filters[i].Property })
                            </td>
                            <td>
                                @Html.TextBoxFor(f => Model.Filters[i].FilterValue)
                            </td>
                            <td>
                                @Html.TextBoxFor(f => Model.Filters[i].OperatorValue)
                            </td>
                        </tr>
                    }
                </table>
                <label>Operator Field Values: and, or</label>
                <label>Item Field Values: a guid or teststate(active, inactive, done, archived)</label>
                <input type="submit" value="FilteredTests" />
            }
        </p>
    </div>
</body>
</html>
