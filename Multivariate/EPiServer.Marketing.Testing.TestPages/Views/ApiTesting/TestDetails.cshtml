@model EPiServer.Marketing.Testing.Model.ABTest

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>TestDetails</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script type="text/javascript">
        var updateView = function (testId, variantId) {
            $.ajax({
                type: 'POST',
                url: '/api/episerver/testing/UpdateView',
                cache: false,
                contentType: 'charset=utf-8',
                data: 'testId=' + testId + '&variantId=' + variantId,
                done: function () {
                    alert('success!'); // TODO: Change it to something more informative
                },
                fail: function () {
                    alert('fail!'); // TODO: Change it to something more informative
                },
                always: function () {
                    // Reload the page after submission so that the
                    // updated views and conversions are displayed on the page
                    window.location.reload();
                }
            });
        };

	var updateConversion = function (testId, variantId) {
            $.ajax({
                type: 'POST',
                url: '/api/episerver/testing/UpdateConversion/',
                cache: false,
                contentType: 'application/json; charset=utf-8',
                data: { testId: testId, variantId: variantId },
                done: function () {
                    alert('success!'); // TODO: Change it to something more informative
                },
                fail: function () {
                    alert('fail!'); // TODO: Change it to something more informative
                },
                always: function () {
                    // Reload the page after submission so that the
                    // updated views and conversions are displayed on the page
                    window.location.reload();
                }
            });
        };
    </script>
</head>
<body>
    <fieldset>
        <legend>MultivariateTest</legend>
        <div class="display-label">
            @Html.DisplayFor(model => model.Id)
        </div>
        <div class="display-label">
            @Html.DisplayNameFor(model => model.TestState) : @Html.DisplayFor(model => model.TestState)
        </div>


        <div class="display-label">
            @Html.DisplayNameFor(model => model.Title) : @Html.DisplayFor(model => model.Title)
        </div>

        <div class="display-label">
            @Html.DisplayNameFor(model => model.Owner) : @Html.DisplayFor(model => model.Owner)
        </div>

        <div class="display-label">
            @Html.DisplayNameFor(model => model.StartDate) : @Html.DisplayFor(model => model.StartDate)
        </div>

        <div class="display-label">
            @Html.DisplayNameFor(model => model.EndDate) : @Html.DisplayFor(model => model.EndDate)
        </div>

        <div class="display-label">
            @Html.DisplayNameFor(model => model.OriginalItemId) : @Html.DisplayFor(model => model.OriginalItemId)
        </div>

        <div class="display-label">
            @Html.DisplayNameFor(model => model.Variants[0].VariantId) : @Html.DisplayFor(model => model.Variants[0].VariantId)
        </div>

        <div class="display-label">
            @Html.DisplayNameFor(model => model.Conversions) : @Html.DisplayFor(model => model.Conversions)
        </div>
        <hr />
        @if (Model.MultivariateTestResults != null)
        {
            <table style="width:50%">
                @foreach (var result in Model.MultivariateTestResults)
                {
                    <tr><td> @Html.DisplayNameFor(resultItem => result.ItemId) </td><td> @Html.DisplayFor(resultItem => result.ItemId) </td></tr>
                    <tr>
                        <td>@Html.DisplayNameFor(resultItem => result.Views)</td>
                        <td>@Html.DisplayFor(resultItem => result.Views)</td>
                        <td>@Html.ActionLink("Queue Update", "UpdateView", new { id = Model.Id, itemid = result.ItemId })</td>
                        <td><input class="epi-cmsButton-text epi-cmsButton-tools epi-cmsButton-Cancel" type="button" name="btnUpdateViews" id="btnUpdateViews" value="Update via REST" title="Update" onclick="updateView('@Model.Id','@result.ItemId');" /></td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(resultItem => result.Conversions)</td>
                        <td>@Html.DisplayFor(resultItem => result.Conversions)</td>
                        <td>@Html.ActionLink("Queue Update", "UpdateConversion", new { id = Model.Id, itemid = result.ItemId })</td>
                        <td><input class="epi-cmsButton-text epi-cmsButton-tools epi-cmsButton-Cancel" type="button" name="btnUpdateConversions" id="btnUpdateConversions" value="Update via REST" title="Update" onclick="updateConversion('@Model.Id','@result.ItemId');" /></td>
                    </tr>
                    <tr><td>&nbsp;</td></tr> }
            </table>
        }
    </fieldset>
    <p>
        @Html.ActionLink("Start & Stop Test", "RunAbTests", new { id = Model.Id }) |
        @Html.ActionLink("Start", "StartTest", new { id = Model.Id })
        @Html.ActionLink("Archive", "ArchiveAbTest", new { id = Model.Id }) |
        @Html.ActionLink("Edit", "UpdateAbTest", new { id = Model.Id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
</body>
</html>