@using System.Web.Optimization
@using EPiServer.Marketing.Testing.Model
@using EPiServer.Marketing.Testing.Model.Enums
@model EPiServer.Marketing.Testing.TestPages.Models.ViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    @Styles.Render("~/bundles/css")
    @Scripts.Render("~/bundles/js")

</head>
<body class="Sleek">
    <p>

    </p>
    <div class="container">
        <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => Model.Tests[0].Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.Tests[0].Owner)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.Tests[0].StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.Tests[0].EndDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.Tests[0].State)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.Tests[0].OriginalItemId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.Tests[0].Variants)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => Model.Tests[0].Conversions)*@
                    </th>
                    <th colspan="2">
                        Test Results
                    </th>
                    <th></th>
                </tr>
            @foreach (var item in Model.Tests)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>

                    <td>
                        @Html.ActionLink(item.OriginalItemId.ToString(), "GetAbTestList", new {id = item.OriginalItemId})
                    </td>
                    <td>

                        @if (item.Variants != null)
                        {
                            for (int i = 0; i < item.Variants.Count; i++)
                            {
                                @Html.DisplayFor(modelItem => item.Variants[i].Id)
                            }

                        }

                    </td>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.Conversions)*@
                    </td>
                    @if (item.TestResults.Count > 0)
                    {
                        foreach (var result in item.TestResults)
                        {
                            <td>
                                Views:
                                @Html.DisplayFor(resultItem => result.Views)
                                <br/>
                                Item Id:
                                @Html.DisplayFor(resultItem => result.ItemId)
                                <br/>
                                Conversions:
                                @Html.DisplayFor(resultItem => result.Conversions)
                            </td>
                        }
                        if (item.TestResults.Count == 1)
                        {
                            <td></td>}


                    }
                    else
                    {
                        <td>No Page Conversion Test Results Found </td>
                        <td></td>
                    }

                    <td>
                        @Html.ActionLink("Edit", "UpdateAbTest", new {id = item.Id}) |
                        @Html.ActionLink("Details", "GetAbTestById", new {id = item.Id}) |
                        @Html.ActionLink("Delete", "DeleteAbTest", new {id = item.Id})
                    </td>
                </tr>
            }

        </table>
    </div>

    <div>
        <p>
            <span class="btn">@Html.ActionLink("Create New", "CreateAbTest")</span>
        </p>
        <p>
            @using (Html.BeginForm("FilteredTests", "MultivariateApiTesting", FormMethod.Post))
            {
                <table class="table">
                    @for (var i = 0; i < Model.Filters.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.CheckBoxFor(f => Model.Filters[i].IsEnabled, new {@checked = Model.Filters[i].IsEnabled})@Html.Label(Model.Filters[i].Property.ToString())
                                @Html.HiddenFor(f => Model.Filters[i].Property, new {@value = Model.Filters[i].Property})
                            </td>
                            <td>
                                @Html.TextBoxFor(f => Model.Filters[i].FilterValue)
                            </td>
                            <td>
                                @Html.TextBoxFor(f => Model.Filters[i].OperatorValue)
                            </td>
                        </tr>
                    }
                </table>
                <label>Operator Field Values: and, or</label>
                <label>Item Field Values: a guid or teststate(active, inactive, done, archived)</label>
                <input type="submit" value="FilteredTests" />
            }
        </p>
    </div>
</body>
</html>

